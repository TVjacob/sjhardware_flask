"""empty message

Revision ID: ef8b84754441
Revises: 3b30fa34ab63
Create Date: 2025-09-09 20:19:50.766098

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ef8b84754441'
down_revision = '3b30fa34ab63'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('account_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('transaction_number',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prefix', sa.String(length=10), nullable=False),
    sa.Column('last_number', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('expense_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('transaction_no', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_no'], ['transaction_number.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('general_ledger',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('transaction_no', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['transaction_no'], ['transaction_number.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=True),
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('transaction_no', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sale_id'], ['sale.id'], ),
    sa.ForeignKeyConstraint(['transaction_no'], ['transaction_number.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_type', sa.String(length=20), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('transaction_no', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sale_id'], ['sale.id'], ),
    sa.ForeignKeyConstraint(['transaction_no'], ['transaction_number.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stock_adjustment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('adjustment_type', sa.String(length=20), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=200), nullable=True),
    sa.Column('adjusted_at', sa.DateTime(), nullable=True),
    sa.Column('transaction_no', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['transaction_no'], ['transaction_number.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier_payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_order_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_type', sa.String(length=20), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('transaction_no', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_order.id'], ),
    sa.ForeignKeyConstraint(['transaction_no'], ['transaction_number.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'category', ['category_id'], ['id'])

    with op.batch_alter_table('purchase_order', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_price', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('received_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('transaction_no', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'transaction_number', ['transaction_no'], ['id'])

    with op.batch_alter_table('sale', schema=None) as batch_op:
        batch_op.add_column(sa.Column('transaction_no', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'transaction_number', ['transaction_no'], ['id'])

    with op.batch_alter_table('sale_item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('transaction_no', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'transaction_number', ['transaction_no'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sale_item', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('transaction_no')

    with op.batch_alter_table('sale', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('transaction_no')

    with op.batch_alter_table('purchase_order', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('transaction_no')
        batch_op.drop_column('received_at')
        batch_op.drop_column('unit_price')

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('category_id')

    op.drop_table('supplier_payment')
    op.drop_table('stock_adjustment')
    op.drop_table('payment')
    op.drop_table('invoice')
    op.drop_table('general_ledger')
    op.drop_table('expense')
    op.drop_table('user')
    op.drop_table('transaction_number')
    op.drop_table('category')
    op.drop_table('account')
    # ### end Alembic commands ###
